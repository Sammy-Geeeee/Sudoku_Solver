# This is to define the main frame for the program


import tkinter as tk
from functions import *
from tkinter import ttk
from tkinter import font


class FrameMain(tk.Frame):
    def __init__(self, master):
        tk.Frame.__init__(self, master)

        # Some variables for the sizing of various things
        pad_ext = 5
        label_width = 5
        label_pad_ext = 5
        label_pad_int = 2
        label_font = ('Helvetica', 16)
        entry_width = 5
        entry_pad_ext = 0
        entry_pad_int = 0
        entry_font = ('Helvetica', 20)
        # To edit the master frame
        self.canvas = tk.Canvas()
        self.master.columnconfigure([0, 2], weight=1)  # To let the elements stretch
        self.master.rowconfigure([0], weight=1)
    

        # Main frames
        self.frame_main = tk.Frame(self.master)
        # To position these frames
        self.frame_main.grid(row=0, column=0, padx=pad_ext, pady=pad_ext, sticky='nsew')  # To set the main frames/widgets in the window
        # To configure these frames
        self.frame_main.columnconfigure([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], weight=1)
        self.frame_main.rowconfigure([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], weight=1)


        # Main frame Widgets (Labels and setup)
        self.label_A = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='A')
        self.label_B = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='B')
        self.label_C = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='C')
        self.label_D = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='D')
        self.label_E = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='E')
        self.label_F = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='F')
        self.label_G = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='G')
        self.label_H = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='H')
        self.label_I = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='I')
        self.label_1 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='1')
        self.label_2 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='2')
        self.label_3 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='3')
        self.label_4 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='4')
        self.label_5 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='5')
        self.label_6 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='6')
        self.label_7 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='7')
        self.label_8 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='8')
        self.label_9 = tk.Label(master=self.frame_main, width=label_width, font=label_font, text='9')
        self.scroll_info = tk.Scrollbar(self.frame_main)
        self.list_info = tk.Listbox(master=self.frame_main, yscrollcommand=self.scroll_info.set)
        self.button_solve = tk.Button(master=self.frame_main, text='Solve\nSudoku', command=self.fullSolve)
        self.button_clear = tk.Button(master=self.frame_main, text='Clear\nMessages', command=lambda: self.list_info.delete(0, tk.END))
        self.button_reset = tk.Button(master=self.frame_main, text='Reset\nSudoku', command=self.resetEntries)
        # Positioning of all these widgets
        self.label_A.grid(row=0, column=1, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_B.grid(row=0, column=2, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_C.grid(row=0, column=3, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_D.grid(row=0, column=5, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_E.grid(row=0, column=6, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_F.grid(row=0, column=7, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_G.grid(row=0, column=9, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_H.grid(row=0, column=10, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_I.grid(row=0, column=11, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_1.grid(row=1, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_2.grid(row=2, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_3.grid(row=3, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_4.grid(row=5, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_5.grid(row=6, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_6.grid(row=7, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_7.grid(row=9, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_8.grid(row=10, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.label_9.grid(row=11, column=0, sticky='nsew', ipadx=label_pad_int, ipady=label_pad_int, padx=label_pad_ext, pady=label_pad_ext)
        self.scroll_info.grid(row=13, column=12, padx=[0, pad_ext], pady=pad_ext, sticky='ns')
        self.list_info.grid(row=13, column=1, columnspan=11, padx=[pad_ext, 0], pady=pad_ext, sticky='nsew')
        self.button_solve.grid(row=1, column=14, padx=pad_ext, pady=pad_ext)
        self.button_clear.grid(row=2, column=14, padx=pad_ext, pady=pad_ext)
        self.button_reset.grid(row=3, column=14, padx=pad_ext, pady=pad_ext)
        # Configurations for scroll setup
        self.scroll_info.config(command=self.list_info.yview)
        self.list_info.config(font=font.Font(size=11))

        # Input Frame Widgets (Entry points)
        self.entry_A1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I1 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I2 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I3 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I4 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I5 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I6 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I7 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I8 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_A9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_B9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_C9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_D9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_E9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_F9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_G9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_H9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        self.entry_I9 = tk.Entry(master=self.frame_main, width=entry_width, justify='center', font=entry_font)
        # Positioning of all these widgets
        self.entry_A1.grid(row=1, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B1.grid(row=1, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C1.grid(row=1, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D1.grid(row=1, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E1.grid(row=1, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F1.grid(row=1, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G1.grid(row=1, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H1.grid(row=1, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I1.grid(row=1, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A2.grid(row=2, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B2.grid(row=2, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C2.grid(row=2, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D2.grid(row=2, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E2.grid(row=2, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F2.grid(row=2, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G2.grid(row=2, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H2.grid(row=2, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I2.grid(row=2, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A3.grid(row=3, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B3.grid(row=3, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C3.grid(row=3, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D3.grid(row=3, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E3.grid(row=3, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F3.grid(row=3, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G3.grid(row=3, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H3.grid(row=3, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I3.grid(row=3, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A4.grid(row=5, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B4.grid(row=5, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C4.grid(row=5, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D4.grid(row=5, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E4.grid(row=5, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F4.grid(row=5, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G4.grid(row=5, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H4.grid(row=5, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I4.grid(row=5, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A5.grid(row=6, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B5.grid(row=6, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C5.grid(row=6, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D5.grid(row=6, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E5.grid(row=6, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F5.grid(row=6, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G5.grid(row=6, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H5.grid(row=6, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I5.grid(row=6, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A6.grid(row=7, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B6.grid(row=7, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C6.grid(row=7, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D6.grid(row=7, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E6.grid(row=7, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F6.grid(row=7, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G6.grid(row=7, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H6.grid(row=7, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I6.grid(row=7, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A7.grid(row=9, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B7.grid(row=9, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C7.grid(row=9, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D7.grid(row=9, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E7.grid(row=9, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F7.grid(row=9, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G7.grid(row=9, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H7.grid(row=9, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I7.grid(row=9, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A8.grid(row=10, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B8.grid(row=10, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C8.grid(row=10, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D8.grid(row=10, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E8.grid(row=10, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F8.grid(row=10, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G8.grid(row=10, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H8.grid(row=10, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I8.grid(row=10, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_A9.grid(row=11, column=1, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_B9.grid(row=11, column=2, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_C9.grid(row=11, column=3, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_D9.grid(row=11, column=5, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_E9.grid(row=11, column=6, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_F9.grid(row=11, column=7, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_G9.grid(row=11, column=9, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_H9.grid(row=11, column=10, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        self.entry_I9.grid(row=11, column=11, sticky='nsew', ipadx=entry_pad_int, ipady=entry_pad_int, padx=entry_pad_ext, pady=entry_pad_ext)
        

    def resetEntries(self):
        # This function is just to reset all the entries within the sudoku board
        self.entry_A1.delete(0, 'end')
        self.entry_B1.delete(0, 'end')
        self.entry_C1.delete(0, 'end')
        self.entry_D1.delete(0, 'end')
        self.entry_E1.delete(0, 'end')
        self.entry_F1.delete(0, 'end')
        self.entry_G1.delete(0, 'end')
        self.entry_H1.delete(0, 'end')
        self.entry_I1.delete(0, 'end')
        self.entry_A2.delete(0, 'end')
        self.entry_B2.delete(0, 'end')
        self.entry_C2.delete(0, 'end')
        self.entry_D2.delete(0, 'end')
        self.entry_E2.delete(0, 'end')
        self.entry_F2.delete(0, 'end')
        self.entry_G2.delete(0, 'end')
        self.entry_H2.delete(0, 'end')
        self.entry_I2.delete(0, 'end')
        self.entry_A3.delete(0, 'end')
        self.entry_B3.delete(0, 'end')
        self.entry_C3.delete(0, 'end')
        self.entry_D3.delete(0, 'end')
        self.entry_E3.delete(0, 'end')
        self.entry_F3.delete(0, 'end')
        self.entry_G3.delete(0, 'end')
        self.entry_H3.delete(0, 'end')
        self.entry_I3.delete(0, 'end')
        self.entry_A4.delete(0, 'end')
        self.entry_B4.delete(0, 'end')
        self.entry_C4.delete(0, 'end')
        self.entry_D4.delete(0, 'end')
        self.entry_E4.delete(0, 'end')
        self.entry_F4.delete(0, 'end')
        self.entry_G4.delete(0, 'end')
        self.entry_H4.delete(0, 'end')
        self.entry_I4.delete(0, 'end')
        self.entry_A5.delete(0, 'end')
        self.entry_B5.delete(0, 'end')
        self.entry_C5.delete(0, 'end')
        self.entry_D5.delete(0, 'end')
        self.entry_E5.delete(0, 'end')
        self.entry_F5.delete(0, 'end')
        self.entry_G5.delete(0, 'end')
        self.entry_H5.delete(0, 'end')
        self.entry_I5.delete(0, 'end')
        self.entry_A6.delete(0, 'end')
        self.entry_B6.delete(0, 'end')
        self.entry_C6.delete(0, 'end')
        self.entry_D6.delete(0, 'end')
        self.entry_E6.delete(0, 'end')
        self.entry_F6.delete(0, 'end')
        self.entry_G6.delete(0, 'end')
        self.entry_H6.delete(0, 'end')
        self.entry_I6.delete(0, 'end')
        self.entry_A7.delete(0, 'end')
        self.entry_B7.delete(0, 'end')
        self.entry_C7.delete(0, 'end')
        self.entry_D7.delete(0, 'end')
        self.entry_E7.delete(0, 'end')
        self.entry_F7.delete(0, 'end')
        self.entry_G7.delete(0, 'end')
        self.entry_H7.delete(0, 'end')
        self.entry_I7.delete(0, 'end')
        self.entry_A8.delete(0, 'end')
        self.entry_B8.delete(0, 'end')
        self.entry_C8.delete(0, 'end')
        self.entry_D8.delete(0, 'end')
        self.entry_E8.delete(0, 'end')
        self.entry_F8.delete(0, 'end')
        self.entry_G8.delete(0, 'end')
        self.entry_H8.delete(0, 'end')
        self.entry_I8.delete(0, 'end')
        self.entry_A9.delete(0, 'end')
        self.entry_B9.delete(0, 'end')
        self.entry_C9.delete(0, 'end')
        self.entry_D9.delete(0, 'end')
        self.entry_E9.delete(0, 'end')
        self.entry_F9.delete(0, 'end')
        self.entry_G9.delete(0, 'end')
        self.entry_H9.delete(0, 'end')
        self.entry_I9.delete(0, 'end')


    def retrieveInputs(self):
        # This function is to retrieve all the inputs for the sudoku board and make sure their values are as they should be
        # This will return a sudoku board in a form that the solving function can interpret
        board_input = {
            'A1':self.entry_A1.get(), 'B1':self.entry_B1.get(), 'C1':self.entry_C1.get(), 'D1':self.entry_D1.get(), 'E1':self.entry_E1.get(),
            'F1':self.entry_F1.get(), 'G1':self.entry_G1.get(), 'H1':self.entry_H1.get(), 'I1':self.entry_I1.get(),
            'A2':self.entry_A2.get(), 'B2':self.entry_B2.get(), 'C2':self.entry_C2.get(), 'D2':self.entry_D2.get(), 'E2':self.entry_E2.get(),
            'F2':self.entry_F2.get(), 'G2':self.entry_G2.get(), 'H2':self.entry_H2.get(), 'I2':self.entry_I2.get(),
            'A3':self.entry_A3.get(), 'B3':self.entry_B3.get(), 'C3':self.entry_C3.get(), 'D3':self.entry_D3.get(), 'E3':self.entry_E3.get(),
            'F3':self.entry_F3.get(), 'G3':self.entry_G3.get(), 'H3':self.entry_H3.get(), 'I3':self.entry_I3.get(),
            'A4':self.entry_A4.get(), 'B4':self.entry_B4.get(), 'C4':self.entry_C4.get(), 'D4':self.entry_D4.get(), 'E4':self.entry_E4.get(),
            'F4':self.entry_F4.get(), 'G4':self.entry_G4.get(), 'H4':self.entry_H4.get(), 'I4':self.entry_I4.get(),
            'A5':self.entry_A5.get(), 'B5':self.entry_B5.get(), 'C5':self.entry_C5.get(), 'D5':self.entry_D5.get(), 'E5':self.entry_E5.get(),
            'F5':self.entry_F5.get(), 'G5':self.entry_G5.get(), 'H5':self.entry_H5.get(), 'I5':self.entry_I5.get(),
            'A6':self.entry_A6.get(), 'B6':self.entry_B6.get(), 'C6':self.entry_C6.get(), 'D6':self.entry_D6.get(), 'E6':self.entry_E6.get(),
            'F6':self.entry_F6.get(), 'G6':self.entry_G6.get(), 'H6':self.entry_H6.get(), 'I6':self.entry_I6.get(),
            'A7':self.entry_A7.get(), 'B7':self.entry_B7.get(), 'C7':self.entry_C7.get(), 'D7':self.entry_D7.get(), 'E7':self.entry_E7.get(),
            'F7':self.entry_F7.get(), 'G7':self.entry_G7.get(), 'H7':self.entry_H7.get(), 'I7':self.entry_I7.get(),
            'A8':self.entry_A8.get(), 'B8':self.entry_B8.get(), 'C8':self.entry_C8.get(), 'D8':self.entry_D8.get(), 'E8':self.entry_E8.get(),
            'F8':self.entry_F8.get(), 'G8':self.entry_G8.get(), 'H8':self.entry_H8.get(), 'I8':self.entry_I8.get(),
            'A9':self.entry_A9.get(), 'B9':self.entry_B9.get(), 'C9':self.entry_C9.get(), 'D9':self.entry_D9.get(), 'E9':self.entry_E9.get(),
            'F9':self.entry_F9.get(), 'G9':self.entry_G9.get(), 'H9':self.entry_H9.get(), 'I9':self.entry_I9.get(),
        }

        for cell, value in board_input.items():
            if value == '':  # This is a blank cell in our program, so we don't need to look at it
                board_input[cell] = ' '  # We change this to a single space so the program know's it's a blank
            else:
                try:
                    board_input[cell] = int(value)  # These two lines are to edit the board and to save the value in a new variable for further use
                    number = int(value)
                    if number not in [1, 2, 3, 4, 5, 6, 7, 8, 9]:  # Anything outside of this excluding a blank cell will be invalid
                        self.list_info.insert(tk.END, f'Invalid Input in cell {cell}: "{value}"')
                except ValueError:
                    self.list_info.insert(tk.END, f'Invalid Input in cell {cell}: "{value}"')
        
        return board_input
                

    def displayBoard(self, solved_board):
        # This function is to take an input of the solved board and output it back onto the GUI
        self.resetEntries()  # To reset the display board so you can input the solved entries as clean
        
        # This is to insert all the solved values into the GUI
        self.entry_A1.insert(0, solved_board['A1'])
        self.entry_B1.insert(0, solved_board['B1'])
        self.entry_C1.insert(0, solved_board['C1'])
        self.entry_D1.insert(0, solved_board['D1'])
        self.entry_E1.insert(0, solved_board['E1'])
        self.entry_F1.insert(0, solved_board['F1'])
        self.entry_G1.insert(0, solved_board['G1'])
        self.entry_H1.insert(0, solved_board['H1'])
        self.entry_I1.insert(0, solved_board['I1'])
        self.entry_A2.insert(0, solved_board['A2'])
        self.entry_B2.insert(0, solved_board['B2'])
        self.entry_C2.insert(0, solved_board['C2'])
        self.entry_D2.insert(0, solved_board['D2'])
        self.entry_E2.insert(0, solved_board['E2'])
        self.entry_F2.insert(0, solved_board['F2'])
        self.entry_G2.insert(0, solved_board['G2'])
        self.entry_H2.insert(0, solved_board['H2'])
        self.entry_I2.insert(0, solved_board['I2'])
        self.entry_A3.insert(0, solved_board['A3'])
        self.entry_B3.insert(0, solved_board['B3'])
        self.entry_C3.insert(0, solved_board['C3'])
        self.entry_D3.insert(0, solved_board['D3'])
        self.entry_E3.insert(0, solved_board['E3'])
        self.entry_F3.insert(0, solved_board['F3'])
        self.entry_G3.insert(0, solved_board['G3'])
        self.entry_H3.insert(0, solved_board['H3'])
        self.entry_I3.insert(0, solved_board['I3'])
        self.entry_A4.insert(0, solved_board['A4'])
        self.entry_B4.insert(0, solved_board['B4'])
        self.entry_C4.insert(0, solved_board['C4'])
        self.entry_D4.insert(0, solved_board['D4'])
        self.entry_E4.insert(0, solved_board['E4'])
        self.entry_F4.insert(0, solved_board['F4'])
        self.entry_G4.insert(0, solved_board['G4'])
        self.entry_H4.insert(0, solved_board['H4'])
        self.entry_I4.insert(0, solved_board['I4'])
        self.entry_A5.insert(0, solved_board['A5'])
        self.entry_B5.insert(0, solved_board['B5'])
        self.entry_C5.insert(0, solved_board['C5'])
        self.entry_D5.insert(0, solved_board['D5'])
        self.entry_E5.insert(0, solved_board['E5'])
        self.entry_F5.insert(0, solved_board['F5'])
        self.entry_G5.insert(0, solved_board['G5'])
        self.entry_H5.insert(0, solved_board['H5'])
        self.entry_I5.insert(0, solved_board['I5'])
        self.entry_A6.insert(0, solved_board['A6'])
        self.entry_B6.insert(0, solved_board['B6'])
        self.entry_C6.insert(0, solved_board['C6'])
        self.entry_D6.insert(0, solved_board['D6'])
        self.entry_E6.insert(0, solved_board['E6'])
        self.entry_F6.insert(0, solved_board['F6'])
        self.entry_G6.insert(0, solved_board['G6'])
        self.entry_H6.insert(0, solved_board['H6'])
        self.entry_I6.insert(0, solved_board['I6'])
        self.entry_A7.insert(0, solved_board['A7'])
        self.entry_B7.insert(0, solved_board['B7'])
        self.entry_C7.insert(0, solved_board['C7'])
        self.entry_D7.insert(0, solved_board['D7'])
        self.entry_E7.insert(0, solved_board['E7'])
        self.entry_F7.insert(0, solved_board['F7'])
        self.entry_G7.insert(0, solved_board['G7'])
        self.entry_H7.insert(0, solved_board['H7'])
        self.entry_I7.insert(0, solved_board['I7'])
        self.entry_A8.insert(0, solved_board['A8'])
        self.entry_B8.insert(0, solved_board['B8'])
        self.entry_C8.insert(0, solved_board['C8'])
        self.entry_D8.insert(0, solved_board['D8'])
        self.entry_E8.insert(0, solved_board['E8'])
        self.entry_F8.insert(0, solved_board['F8'])
        self.entry_G8.insert(0, solved_board['G8'])
        self.entry_H8.insert(0, solved_board['H8'])
        self.entry_I8.insert(0, solved_board['I8'])
        self.entry_A9.insert(0, solved_board['A9'])
        self.entry_B9.insert(0, solved_board['B9'])
        self.entry_C9.insert(0, solved_board['C9'])
        self.entry_D9.insert(0, solved_board['D9'])
        self.entry_E9.insert(0, solved_board['E9'])
        self.entry_F9.insert(0, solved_board['F9'])
        self.entry_G9.insert(0, solved_board['G9'])
        self.entry_H9.insert(0, solved_board['H9'])
        self.entry_I9.insert(0, solved_board['I9'])



    def fullSolve(self):
        # This function will combine all the other functions together to solve and display all the sudoku
        start_board = self.retrieveInputs()  # To retrieve the starting inputs from the board
        self.resetEntries()
        solved_board = sudokuSolver(start_board)  # This will actually solve the sudoku board
        self.displayBoard(solved_board)  # This will re-insert all the values into the GUI
